// Code generated by 'freedom new-po'
package po

import (
	"time"
)

type Admin struct {
	changes map[string]interface{}
	Id      int       `gorm:"primary_key;column:id"`
	Name    string    `gorm:"column:name"` // 管理员名称
	Created time.Time `gorm:"column:created"`
	Updated time.Time `gorm:"column:updated"`
}

func (obj *Admin) TableName() string {
	return "admin"
}

// TakeChanges .
func (obj *Admin) TakeChanges() map[string]interface{} {
	if obj.changes == nil {
		return nil
	}
	result := make(map[string]interface{})
	for k, v := range obj.changes {
		result[k] = v
	}
	obj.changes = nil
	return result
}

// SetName .
func (obj *Admin) SetName(name string) {
	if obj.changes == nil {
		obj.changes = make(map[string]interface{})
	}
	obj.Name = name
	obj.changes["name"] = name
}

// SetCreated .
func (obj *Admin) SetCreated(created time.Time) {
	if obj.changes == nil {
		obj.changes = make(map[string]interface{})
	}
	obj.Created = created
	obj.changes["created"] = created
}

// SetUpdated .
func (obj *Admin) SetUpdated(updated time.Time) {
	if obj.changes == nil {
		obj.changes = make(map[string]interface{})
	}
	obj.Updated = updated
	obj.changes["updated"] = updated
}
